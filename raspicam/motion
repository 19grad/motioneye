#!/bin/bash

# this script is a wrapper around motion binary
# that makes motion work with the uv4l raspi camera module

MOTION_BIN=/usr/bin/motion
UV4L_BIN=/usr/bin/uv4l
JPEG_QUALITY=85

function list_config_files() {
    prev_arg=""
    config_file=""
    for arg in $*; do
        if [ "$prev_arg" == "-c" ]; then
            config_file=$arg
            break
        fi
        prev_arg=$arg
    done

    if [ -r "$config_file" ];then
        echo "$config_file"
        cat motion.conf | grep thread | cut -d ' ' -f 2
    fi
}

function find_resolution() {
    width="640" # the defaults
    height="480"

    for file in $(list_config_files); do
        w=$(cat "$file" | grep width | cut -d ' ' -f 2)
        h=$(cat "$file" | grep height | cut -d ' ' -f 2)
        if [ -n "$w" ] && [ -n "$h" ]; then
            break
        fi
    done

    echo $width $height
}

# find the configured resolution
resolution=$(find_resolution)
resolution=($resolution)

# kill any previous uv4l instance
pkill uv4l
${UV4L_BIN} --driver raspicam --auto-video_nr --extension-presence 1 --sched-rr --width ${resolution[0]} --height ${resolution[1]} --encoding jpeg --quality $JPEG_QUALITY

# start motion binary with preloaded .so
export LD_PRELOAD=/usr/lib/uv4l/uv4lext/armv6l/libuv4lext.so
exec ${MOTION_BIN} $*
